name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print test1
        run: echo "test1"

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Debug workspace
        run: ls -R

      - name: Verify files before SCP
        run: |
          ls -lh Dockerfile
          ls -lh target/CityNewsBase-0.0.1-SNAPSHOT.jar

      - name: Push application files to EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 51.20.58.13
          username: ec2-user
          key: ${{ secrets.AWS_PEM }}
          script: |
            mkdir -p ~/app/
            scp Dockerfile ec2-user@51.20.58.13:~/app/
            scp target/CityNewsBase-0.0.1-SNAPSHOT.jar ec2-user@51.20.58.13:~/app/

      - name: Run Docker container on EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 51.20.58.13
          username: ec2-user
          key: ${{ secrets.AWS_PEM }}
          script: |
            cd ~/app
            docker stop spring-boot-container || true
            docker rm spring-boot-container || true
            docker build -t my-spring-boot-app .
            docker run -d --name spring-boot-container my-spring-boot-app

      - name: Test container status on EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 51.20.58.13
          username: ec2-user
          key: ${{ secrets.AWS_PEM }}
          script: |
            docker ps | grep spring-boot-container || exit 1
            docker logs spring-boot-container
